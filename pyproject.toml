[tool.poetry]
name = "store-wpay-payment-datahub"
version = "0.1.0"
description = ""
authors = ["Francis Zheng <fzheng@woolworths.com.au>"]
readme = "README.md"
packages = [{include = "store_wpay_payment_datahub"}]

[tool.poetry.dependencies]
python = "^3.8"
pytz = "^2022.7.1"
google-cloud-pubsub = "^2.15.1"
google-cloud-storage = "^2.7.0"
google-cloud-bigquery = "^3.7.0"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.10.3"
black = "^23.1.0"
isort = "^5.12.0"
pylint = "^2.16.3"
ruff = "^0.0.257"


[tool.taskipy.settings]
use_vars = true

[tool.taskipy.variables]
path = "app/dags/common/pdh_file_gen_bq_to_gcs.py app/dags/common/pdh_logging/"

[tool.taskipy.tasks]
lint = "pylint -j 8 -r n {path}"
test = "pytest -s"
black = "black {path}"
isort = "isort {path}"
ruff = "ruff check {path}"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
lines_between_sections = 0
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
skip_gitignore = true
skip_glob = ["*/.ipynb_checkpoints/*", ]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E501", ]
# E501 Line too long

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F",]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8.
target-version = "py38"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
