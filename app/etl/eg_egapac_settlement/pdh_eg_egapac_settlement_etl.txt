--Start of Script
--load Settlement Listing add Source CY
DECLARE inp_lookup STRING DEFAULT "EG Settlement";
DECLARE batch string;
--
declare trailorcount int64;
declare sysdate date default current_date("Australia/Sydney");
declare batch_start_yyyy_mm_dd_hh_mm_ss datetime default datetime_trunc(current_datetime("Australia/Sydney"),second);
declare batch_end_yyyy_mm_dd_hh_mm_ss datetime;
declare batch_end_yyyy_mm_dd_hh_mm_ss_1 datetime;
declare batch_end_yyyymmdd string;
declare max_settlementdate date default (Select max(cast(datetime_created as date)) 
                                         FROM `pdh_analytics_ds.audit_stlm_batch`
                                         where batchnumber between "S000000001" and "S999999999");
CALL `pdh_ref_ds.get_nextbatch`(inp_lookup,batch);
if (ifnull(batch,"") in ("","NOContRec","UpdFailed"))  then
    return;
end if; 
set batch_end_yyyy_mm_dd_hh_mm_ss = datetime_trunc(current_datetime("Australia/Sydney"),second);
set batch_end_yyyy_mm_dd_hh_mm_ss_1 = datetime_add(batch_end_yyyy_mm_dd_hh_mm_ss, 
                                                     INTERVAL -1 DAY);
--                                                   
-- Always add CSV Headers based on settlement window
  truncate table `pdh_analytics_ds.stlm_std_eg_transaction_listing`;
  --
  insert into `pdh_analytics_ds.stlm_std_eg_transaction_listing`
         select distinct 
                    concat(tlf.stlf_prefix,"_Settlement_",
                                                     format_date("%Y%m%d%H%M%S",
                                                     batch_end_yyyy_mm_dd_hh_mm_ss_1)) as file_name,
                    tlf.stlf_prefix as merchant,
                    "H",
                    "transaction_uid",
                    "wpay_store_id",
                    "terminal_id",
                    "card_acceptor_id",
                    "transaction_amt",
                    "transaction_timestamp",
                    "transaction_local_timestamp",
                    "pan",
                    "stan",
                    "rrn",
                    "original_stan",
                    "mti",
                    "card_entry_mode",
                    "sale_amt",
                    "cashout_amt",
                    "transaction_type_desc",
                    "scheme",
                    "card_type",
                    "card_subtype",
                    "settlement_date",
                    "response_code",
                    "approval_status",
                    "approval_code",
                    "order_num",
                    "addtl_response_data",
                    "card_acceptor_name_location",
                    "merchant_store_id",
                    "account_type",
                    "surcharge_amt",
                    "tip_amt",
                    "moto_type",
                    "original_scheme",
                    "mcr_ind"
         from `pdh_ref_ds.ref_stlm_tlf_config` tlf
         where ifnull(tlf.stlf_prefix,"")  <> "";
--
--Add details if settled not reported exists exists
 insert into `pdh_analytics_ds.stlm_std_eg_transaction_listing`
   With trqc as (
          Select concat("QC_",trim(ifnull(tqc.approvalcode,"Null")),"_",
                               trim(ifnull(tqc.ReferenceNumber,"Null")),"_",
                               cast(ifnull(tqc.BatchNumber,0) as string),"_",
                               case 
                                  when tqc.transactiondate is null then "19000101"
                                  else format_date("%Y%m%d",tqc.transactiondate)
                               end,"T",
                               case 
                                  when tqc.transactiontime is null then "000000"
                                  else format_time("%H%M%S",tqc.transactiontime)
                               end) as tran_uid,
                  st1.division,
                  st1.store_id,
                  tqc.POSName as terminal_id,
                  st1.tran_settlement_amount + st1.discount_amt as trans_amt,
                  st1.transaction_timestamp,
                  concat(format_date("%Y%m%d",tqc.DateAtClient),
                         format_time("%H%M%S",tqc.TimeAtClient)) as timestamp_local,
                  tqc.CardNumber,
                  cast(null as string) as stan,
                  tqc.BusinessReferenceNumber as rrn,
                  cast(null as string) original_stan,
                  cast(null as string) mti,
                  tqc.cardEntryMode,
                  st1.tran_settlement_amount + st1.discount_amt as sale_amt,
                  0 as cashout_amt,
                  trim(tqc.transactiontype) transactiontype,
                  "GIFT CARDS" scheme,
                  tqc.CardProgramGroupType card_type,
                  cast(null as string) card_subtype,
                  st1.posting_date as settlement_date, 
                  case 
                     when upper(trim(tqc.transactionstatus)) = "SUCCESS" then "00"
                     else "12"
                  end response_code,
                  case 
                     when upper(trim(tqc.transactionstatus)) = "SUCCESS" then "1"
                     else "0"
                  end approval_status,
                  tqc.ApprovalCode approval_code,
                  st1.order_number,
                  cast(null as string) addtl_response_data,
                  cast(null as string) as account_type,
                  0 as surcharge_amt,
                  0 as tip_amt,
                  cast(null as string) as   moto_type,
                  cast(null as string) as   original_scheme,
                  cast(null as string) as   mcr_ind,
                  tqc.outlet
      from `pdh_rd_quickcilver.qc_detail_transactions` tqc
      join  pdh_analytics_ds.stlm_standard_settlement_table st1
            on st1.tran_uid = concat("QC_",trim(tqc.approvalcode),"_",
                                  trim(tqc.ReferenceNumber),"_",
                                  cast(tqc.BatchNumber as string),"_",
                                  format_date("%Y%m%d",tqc.transactiondate),"T",
                                  format_time("%H%M%S",tqc.transactiontime))
           and ifnull(st1.tlf_name,"") = "" 
           and ifnull(st1.setlmnt_result_file,"") <> ""),
   trcy as (
            Select concat("CY_",cast(tcy.tran_uid as string)) as tran_uid,
                   st2.division,
                   st2.store_id,
                   tcy.terminal_id,
                   st2.tran_settlement_amount + st2.discount_amt as trans_amt,
                   st2.transaction_timestamp,
                   Cast(tcy.trasnaction_timestamp as string) as timestamp_local,
                   tcy.pan as CardNumber,
                   cast(null as string) stan,
                   cast(ifnull(tcy.retrieval_reference_number,0) as string) as rrn,
                   cast(null as string) original_stan,
                   cast(null as string) mti,
                   cast(tcy.card_entry_mode as string) as CardEntryMode,
                   st2.tran_settlement_amount + st2.discount_amt as sale_amt,
                   0 as cashout_amt,
                   trim(tcy.transaction_type) transactiontype,
                   tcy.scheme,
                   tcy.card_type,
                   cast(null as string) card_subtype,
                   st2.posting_date as settlement_date,
                  cast(null as string) as  response_code,
                  cast(ifnull(tcy.transaction_approval_status,0) as string) approval_status,
                  tcy.approval_code approval_code,
                  st2.order_number,
                  tcy.decline_reason addtl_response_data,
                  cast(null as string) as   account_type,
                  ifnull(tcy.surcharge_amount,0) surcharge_amt,
                  ifnull(tcy.tip_amount,0) as tip_amt,
                  cast(null as string) as   moto_type,
                  tcy.scheme original_scheme,
                  cast(null as string) as    mcr_ind,
                  "" as outlet
      from `pdh_rd_data_navigator.isg_wpay_tran` tcy
      join  pdh_analytics_ds.stlm_standard_settlement_table st2
            on st2.tran_uid = concat("CY_",cast(tcy.tran_uid as string))
           and ifnull(st2.tlf_name,"") = "" 
           and ifnull(st2.setlmnt_result_file,"") <> ""
               ),
--
     trlk as (
            Select concat("LK_",
                          trim(ifNull(tlk.ResRef,"NULL")),"_",
                          case 
                             when tlk.ReqDate is null then "19000101" 
                             else format_date("%Y%m%d",tlk.ReqDate)
                          end, "T",
                          case 
                             when tlk.ReqTime is null then "000000"
                             else format_time("%H%M%S",tlk.ReqTime)
                          end) as tran_uid,
                   st3.division,
                   st3.store_id,
                   tlk.TerminalID as terminal_id,
                   st3.tran_settlement_amount + st3.discount_amt as trans_amt,
                   st3.transaction_timestamp,
                   format_datetime("%Y%m%d%H%M%S",datetime(tlk.ReqTT)) as timestamp_local,
                   cast(null as string) as CardNumber,
                   cast(null as string) as stan,
                   cast(null as string) as rrn,
                   cast(null as string) as original_stan,
                   cast(null as string) as mti,
                   cast(null as string) as CardEntryMode,
                   st3.tran_settlement_amount + st3.discount_amt as sale_amt,
                   0 as cashout_amt,
                   trim(tlk.ReqType) as transactiontype,
                   "ALIPAY" as scheme,
                   cast(null as string) as card_type,
                   cast(null as string) as card_subtype,
                   st3.posting_date as settlement_date,
                   case upper(trim(tlk.ResHRC)) 
                      when "SUCCESS" then "00" 
                      else "12"
                   end as  response_code,
                   case upper(trim(tlk.ResHRC)) 
                      when "SUCCESS" then "1" 
                      else "0"
                   end as approval_status,
                  cast(null as string) as approval_code,
                  st3.order_number,
                  cast(null as string) as addtl_response_data,
                  cast(null as string) as account_type,
                  0 as surcharge_amt,
                  0 as tip_amt,
                  cast(null as string) as moto_type,
                  cast(null as string) as original_scheme,
                  cast(null as string) as mcr_ind,
                  "" as outlet
      from `pdh_rd_apm.alipay_linkly` tlk
      join  pdh_analytics_ds.stlm_standard_settlement_table st3
            on st3.tran_uid = concat("LK_",
                  trim(ifNull(tlk.ResRef,"NULL")),"_",
                  case 
                     when ReqDate is null then "19000101" 
                     else format_date("%Y%m%d",tlk.ReqDate)
                  end, "T",
                  case 
                     when tlk.ReqTime is null then "000000"
                     else format_time("%H%M%S",tlk.ReqTime)
                  end)
           and ifnull(st3.tlf_name,"") = "" 
           and ifnull(st3.setlmnt_result_file,"") <> ""
               ),
--
      trdp as (
            Select concat("DP_",trim(tdp.txnRef)) as tran_uid,
                   st4.division,
                   st4.store_id,
                   tdp.terminal_id,
                   st4.tran_settlement_amount + st4.discount_amt as trans_amt,
                   st4.transaction_timestamp,
                   case
                      when tdp.txnTime is null then "1900-01-01T00:00:00"
                      else format_datetime("%Y%m%d%H%M%S",datetime(txnTime))
                   end as  timestamp_local,
                   cast(null as string) as CardNumber,
                   cast(null as string) as stan,
                   tdp.RRN as rrn,
                   cast(null as string) as original_stan,
                   cast(null as string) as mti,
                   cast(null as string) as CardEntryMode,
                   st4.tran_settlement_amount + st4.discount_amt as sale_amt,
                   0 as cashout_amt,
                   trim(tdp.transactiontype) as transactiontype,
                   "GIFT CARDS" scheme,
                   cast(null as string) as card_type,
                   cast(null as string) as card_subtype,
                   st4.posting_date as settlement_date,
                   case tdp.responseCodeContainer 
                      when "00" then "00" 
                      else "12" 
                   end as response_code,
                   case tdp.responseCodeContainer 
                      when "00" then "1" 
                      else "0" 
                   end as approval_status,
                   cast(null as string) as approval_code,
                   st4.order_number,
                   cast(null as string) as addtl_response_data,
                   cast(null as string) as   account_type,
                   0 as surcharge_amt,
                   0 as tip_amt,
                   cast(null as string) as moto_type,
                   cast(null as string) as original_scheme,
                   cast(null as string) as    mcr_ind,
                   "" as outlet
      from `pdh_rd_data_navigator.digitalpay_gc_txns`  tdp
      join  pdh_analytics_ds.stlm_standard_settlement_table st4
            on st4.tran_uid = concat("DP_",trim(tdp.txnRef))
           and ifnull(st4.tlf_name,"") = "" 
           and ifnull(st4.setlmnt_result_file,"") <> ""
               ),
   trn_combined as (      select * from trqc where ifnull(store_id,"") <> ""
                union all select * from trcy where ifnull(store_id,"") <> ""
                union all select * from trlk where ifnull(store_id,"") <> ""
                union all select * from trdp where ifnull(store_id,"") <> ""
                   ),
   trn_seq as (
      select *, 
             row_number() over(partition by tran_uid order by store_id) tran_seq 
      from trn_combined
      where left(tran_uid,2) <> "QP")    --Stop QC Partner
   Select concat(tlf.stlf_prefix,"_Settlement_",
                    format_date("%Y%m%d%H%M%S",batch_end_yyyy_mm_dd_hh_mm_ss_1)) as file_name,
                 tlf.stlf_prefix as merchant,
                 "D" as record_type,
                 trn.tran_uid as transaction_uid,
                 trn.store_id wpay_store_id,
                 trn.terminal_id,
                 case left(trn.tran_uid,2)
                    when "QC" then cast(null as string)
                    else rsd.caid
                 end  as card_acceptor_id,
                 Concat(
                   case
                    When trn.trans_amt < 0 then "-"
                    else ""
                   End,
                   right(concat(repeat("0",18), 
                                cast(cast(abs(trn.trans_amt) * 100 as Int64)
                                                as string)),18)) as transaction_amount,
                 format_datetime("%Y%m%d%H%M%S", trn.transaction_timestamp) transaction_timestamp,
                 trn.timestamp_local,
                 case 
                    when length(trim(trn.CardNumber)) < 10 then trim(trn.CardNumber)
                    else concat(left(trim(trn.CardNumber),6),
                                repeat("*",length(trim(trn.CardNumber)) - 9),
                                right(trim(trn.cardnumber),3))
                 end as pan,
                 trn.stan,
                 trn.rrn,
                 trn.original_stan,
                 trn.mti,
                 trn.CardEntryMode,
                 Concat(
                   case
                    When trn.sale_amt < 0 then "-"
                    else ""
                   End,
                   right(concat(repeat("0",18), 
                              cast(cast(abs(trn.sale_amt) * 100 as Int64)
                                                as string)),18)) as sale_amt,
                 Concat(
                   case
                    When trn.cashout_amt < 0 then "-"
                    else ""
                   End,
                   right(concat(repeat("0",18), 
                              cast(cast(abs(trn.cashout_amt) * 100 as Int64)
                                                as string)),18)) as cashout_amt,
                 
                 upper(trim(trn.transactiontype)) as transaction_type_desc,
                 trn.scheme,
                 trn.card_type,
                 trn.card_subtype,
                 format_date("%Y%m%d", trn.settlement_date) as settlement_date,
                 trn.response_code,
                 trn.approval_status,
                 trn.approval_code,
                 trn.order_number,
                 trn.addtl_response_data,
                 Case left(tran_uid,2)
                    when "QC" then trn.outlet
                    else rsd.site_name
                 end card_acceptor_name_location, 
                 upper(trim(scm.merchant_store_number)) as merchant_store_id,
                 trn.account_type,
                 Concat(
                   case
                    When trn.surcharge_amt < 0 then "-"
                    else ""
                   End,
                   right(concat(repeat("0",18), 
                                cast(cast(abs(trn.surcharge_amt) * 100 as Int64)
                                      as string)),18)) as sale_amt,
                Concat(
                 case
                    When trn.tip_amt< 0 then "-"
                    else ""
                   End,
                   right(concat(repeat("0",18), 
                                cast(cast(abs(trn.tip_amt) * 100 as Int64)
                                                as string)),18)) as tip_amt,
                 trn.moto_type,
                 trn.original_scheme,
                 trn.mcr_ind
        from trn_seq trn
        join `pdh_ref_ds.ref_stlm_tlf_config` tlf on tlf.division = trn.division
             and ifnull(tlf.stlf_prefix,"") <> ""
        join `pdh_ref_ds.ref_store_details` rsd on upper(trim(rsd.store_id)) = trn.store_id 
        join `pdh_ref_ds.ref_str_to_sap_customermapping` scm
             on upper(trim(scm.wpay_store_number)) = trn.store_id 
        where trn.tran_seq = 1;
         
    --Always Add Trailor 
      insert into `pdh_analytics_ds.stlm_std_eg_transaction_listing`
              (file_name,merchant,record_type,transaction_uid)
              Select file_name,merchant,"T", cast(count(*) - 1 as string)
              from `pdh_analytics_ds.stlm_std_eg_transaction_listing`
              Group By file_name,merchant;
    --add to history
       insert into `pdh_analytics_ds.stlm_std_eg_transaction_listing_history` 
          select batch_end_yyyy_mm_dd_hh_mm_ss, *
          from `pdh_analytics_ds.stlm_std_eg_transaction_listing`;
     --
     --Insert Batch Audit if Detail exists
      insert into `pdh_analytics_ds.audit_stlm_batch`
       (batchnumber, division, record_type, batch_start,	batch_end, filename, posting_file_name,	cutoff_start, cutoff_end,
       	first_trans_time,last_trans_time, no_trans_posted,amount_posted, comment, datetime_created,created_by)
      select batch,
             std.division,
             std.record_type,
             batch_start_yyyy_mm_dd_hh_mm_ss,
             batch_end_yyyy_mm_dd_hh_mm_ss,
             std.filename,
             concat(tlf.stlf_prefix,"_Settlement_",
                    format_date("%Y%m%d%H%M%S",batch_end_yyyy_mm_dd_hh_mm_ss_1)) postingfilename, 
             batch_today.cutoff_min,
             batch_today.cutoff_max,
             std.trans_min,
             std.trans_max,
             std.no_trans_posted, 
             std.amount_posted,
             "processd transaction after cutoff_stat up to cutoff_end",
             cast(format_date("%Y-%m-%dT%H:%M:%S", current_datetime("Australia/Sydney")) as datetime),
             "EG Fuel Settlement"
      from (Select st1.division, st1.record_type,st1.filename, 
                   min(st1.transaction_timestamp) trans_min,
                   max(st1.transaction_timestamp) trans_max,
                   count(*) no_trans_posted, 
                   round(sum(tran_settlement_amount),2) amount_posted
            from `pdh_analytics_ds.stlm_standard_settlement_table` st1
            where ifnull(tlf_name,"") = "" 
             and ifnull(setlmnt_result_file,"") <> ""
            group by division,record_type,filename)  std
      join (Select division, min(cutoff_start) cutoff_min, max(cutoff_end) cutoff_max
            FROM `pdh_analytics_ds.audit_stlm_batch`
            where cast(datetime_created as date) = max_settlementdate 
            and batchnumber between "S000000000" and "S999999999"
            group by division) batch_today on batch_today.division = std.division
      join `pdh_ref_ds.ref_stlm_tlf_config` tlf on tlf.division = std.division
                                                     and ifnull(tlf.stlf_prefix,"") <> "";
 --
--Always add control record based on Settlement window          
      insert into pdh_analytics_ds.file_gen_details 
         select  batch,
                 cast(batch_end_yyyy_mm_dd_hh_mm_ss as date), 
                 lower(concat(std.stlf_prefix,"_egsettlement")),
                 true,
                 null, 
                 ifnull(std.min_transaction,batch_end_yyyy_mm_dd_hh_mm_ss_1),
                 ifnull(std.max_transaction,batch_end_yyyy_mm_dd_hh_mm_ss_1),
                 batch_end_yyyy_mm_dd_hh_mm_ss_1,
                 null
        from (with Gentbl as (Select tlf.stlf_prefix,min(st.transaction_timestamp) min_transaction,
                                                     max(st.transaction_timestamp) max_transaction
                              from `pdh_ref_ds.ref_stlm_tlf_config` tlf
                              join `pdh_analytics_ds.stlm_standard_settlement_table` st 
                                          on tlf.division = st.division
                              where ifnull(tlf.stlf_prefix,"") <> "" 
                             and ifnull(st.tlf_name,"") = ""
                             and ifnull(st.setlmnt_result_file,"") <> ""
                             group by tlf.stlf_prefix)
             select distinct tlf2.stlf_prefix, g.min_transaction,g.max_transaction
             from `pdh_ref_ds.ref_stlm_tlf_config` tlf2
             left join Gentbl g on g.stlf_prefix = tlf2.stlf_prefix
             where ifnull(tlf2.stlf_prefix,"") <> "") std;
                                                          
     --Update Generic table
        Update  `pdh_analytics_ds.stlm_standard_settlement_table` std
           set std.tlf_name = t.tlf_name,
               std.last_update_datetime = batch_end_yyyy_mm_dd_hh_mm_ss,
               std.last_updated_by  ="EG Settlement"
        from (select std1.tran_uid, 
                     concat(tlf.stlf_prefix,"_Settlement_",
                            format_date("%Y%m%d%H%M%S",batch_end_yyyy_mm_dd_hh_mm_ss_1)) tlf_name
              from `pdh_analytics_ds.stlm_standard_settlement_table` std1
              join `pdh_ref_ds.ref_stlm_tlf_config` tlf on tlf.division = std1.division
                                                       and ifnull(tlf.stlf_prefix,"") <> ""
              Where ifnull(std1.tlf_name,"") = "" 
                and ifnull(std1.setlmnt_result_file,"") <> "") t
     Where t.tran_uid = std.tran_uid;
--
--End of Script