--
--Start of Script
--load data to pre settlement table , Alipay,Digipay, QcPartner
declare sys_date date default current_date("Australia/Sydney");
declare batch_start_yyyy_mm_dd_hh_mm_ss datetime default 
            datetime_trunc(current_datetime("Australia/Sydney"),second);
declare batch_end_yyyy_mm_dd_hh_mm_ss datetime;
--
Declare AlipayEnabled string default 
             ifnull((Select enabled from `pdh_ref_ds.ref_settlement_Sources` 
                     where data_source = "LK"),"N");
Declare QCEnabled string default  
             ifnull((Select enabled from `pdh_ref_ds.ref_settlement_Sources` 
                     where data_source = "QC"),"N");
Declare DigipayEnabled string default  
             ifnull((Select enabled from `pdh_ref_ds.ref_settlement_Sources` 
                     where data_source = "DP"),"N");
Declare QPEnabled string default  
             ifnull((Select enabled from `pdh_ref_ds.ref_settlement_Sources` 
                     where data_source = "QP"),"N");
Declare EDEnabled string default  
             ifnull((Select enabled from `pdh_ref_ds.ref_settlement_Sources` 
                     where data_source = "ED"),"N");
--
DECLARE inp_lookup STRING DEFAULT "PRE Settlement";
declare interfaceidentifier string DEFAULT "OST_Deposit";
DECLARE batch string;
--Get next Batch Number

CALL `pdh_ref_ds.get_nextbatch`(inp_lookup,batch);
if (ifnull(batch,"") in ("","NOContRec","UpdFailed"))  then
   return;
end if; 
--
--Replace old data
truncate table `pdh_analytics_ds.stlm_pre_settlement_table`;
truncate table `pdh_analytics_ds.stlm_pre_settlement_csv`;
insert into `pdh_analytics_ds.stlm_pre_settlement_table`
 with trqc as (
     Select
           concat("QC_",trim(ifnull(qct.approvalcode,"Null")),"_",
                        trim(ifnull(qct.ReferenceNumber,"Null")),"_",
                        cast(ifnull(qct.BatchNumber,0) as string),"_",
                        case 
                           when qct.transactiondate is null then "19000101"
                           else format_date("%Y%m%d",qct.transactiondate)
                        end,"T",
                        case 
                           when qct.transactiontime is null then "000000"
                           else format_time("%H%M%S",qct.transactiontime)
                        end) as tran_uid,
           cast(concat(case 
                           when qct.transactiondate is null then "1900-01-01"
                           else format_date("%Y-%m-%d",qct.transactiondate)
                       end, "T",
                       case 
                           when qct.transactiontime is null then "00:00:00"
                           else format_time("%H:%M:%S",qct.transactiontime)
                       end) as datetime) as Trans_datetime,
           qct.file_name,
           case 
              when ifnull(qct.outletcode,"") <>  "" then upper(trim(qct.outletcode))
              when (upper(trim(qct.descriptive_outlet_name)) = "SAP HYBRIS" and
                    upper(left(trim(qct.issuer),20))  = "WOOLWORTHS GROUP LTD") 
                    then "W5975"
              when upper(trim(qct.outlet)) in ("COUNTDOWN QWIKSERV","COUNTDOWN-SERVICES") 
                   and upper(trim(qct.issuer)) = "WOOLWORTHS NEW ZEALAND LIMITED" 
                   then "N9999"
              else cast(null as string)
           end   store_id,
           upper(trim(qct.transactiontype)) as transactiontype,
           "" as tran_qualifier,
           ifnull(qct.amount_transacting_merchants_currency_or_points,0) tran_amount,
           0 as discount_amt     
      from `pdh_rd_quickcilver.qc_detail_transactions` qct
      left Join `pdh_ref_ds.ref_merchant_settlement_window` mw
         on mw.division_type = "PARTNER"
        and mw.division = upper(trim(qct.Merchant))
      where QCEnabled = "Y" 
        and ifnull(mw.division,"") = ""
        and upper(trim(qct.transactionstatus)) =  "SUCCESS"  
        ),
trqp as (
     Select concat("QP_",trim(ifnull(qpt.InvoiceNumber,"Null")),"_",
                         case 
                            when qpt.CardNumber is Null then "NULL"
                            when length(trim(qpt.CardNumber)) < 10 then trim(qpt.CardNumber)
                            else concat(left(trim(qpt.CardNumber),6),
                                   repeat("*",length(trim(qpt.CardNumber)) - 9),
                                   right(trim(qpt.CardNumber),3)
                                       )
                         end,"_",
                         upper(trim(qpt.TransactionType)), "_",
                         case 
                            when qpt.TransactionDate is null then "19000101T000000"
                            else format_datetime("%Y%m%dT%H%M%S",
                                                 cast(qpt.TransactionDate as datetime)
                                                )
                        end) as tran_uid,
           case 
              when qpt.TransactionDate is null then cast("1900-01-01T00:00:00" as datetime)
              else datetime_trunc(cast(qpt.transactiondate as datetime),second)
           end as Trans_datetime,
           qpt.file_name,
           case 
              when trim(ifnull(qpt.outletcode,"")) <> "" then upper(trim(ifnull(qpt.outletcode,"")))
              when upper(trim(qpt.Merchant)) = "PREZZEE-AUS"       then "Q0009"
              when upper(trim(qpt.Merchant)) = "DIGITAL GLUE"      then "Q0010"
              when upper(trim(qpt.Merchant)) = "PITSTOP"           then "Q0005"
              when upper(trim(qpt.Merchant)) = "BLACKHAWK NETWORK" then "Q0012"
              else null 
           end as store_id,
           upper(trim(qpt.TransactionType))  as transactiontype,
           "QP" as tran_qualifier,
           ifnull(qpt.Amount,0) tran_amount,
           ifnull(qpt.DiscountValue,0) as discount_amt  
      from `pdh_rd_quickcilver.qc_partner_detail` qpt
      Join `pdh_ref_ds.ref_merchant_settlement_window` mw
         on mw.division_type = "PARTNER"
        and mw.is_active = "Y"
        and mw.division = upper(trim(qpt.Merchant))
      where QPEnabled = "Y"
        and upper(trim(qpt.TransactionType)) in ("ACTIVATION","CANCELLATION")
        and cast(qpt.transactiondate as datetime) > mw.last_execution_time 
        and (ifnull(qpt.Amount,0) <> 0 or ifnull(qpt.DiscountValue,0) <> 0)  
      ),
trdp as (
       Select concat("DP_",trim(txnRef)) as tran_uid,
              case 
                 when txnTime is null then cast("1900-01-01T00:00:00" as datetime)
                 else datetime_trunc(datetime(txnTime), second)
              end as Trans_datetime,
              file_name,
              upper(left(trim(terminal_id),5)) store_id,
              upper(trim(transactiontype)) as transactiontype,
              case (length(txnRef) - length(replace(txnRef,".","")))
                when 0 then "WEX"
                when 2 then "QC"
                else "NAP"
             end as tran_qualifier, 
             ifnull(amount,0) tran_amount,
             0 as discount_amt 
    from `pdh_rd_data_navigator.digitalpay_gc_txns`
    where DigipayEnabled = "Y"
      and transactiontype = "PURCHASE" 
      and MerchantName = "Everyday Pay"
      and ifnull(responseCodeContainer,"") = "00"
      and ifnull(trim(txnRef),"") <> ""
      and (length(txnRef) - length(replace(txnRef,".",""))) in (0,2)
  ),
  trlk as (
      Select concat("LK_",
                    trim(ifNull(ResRef,"NULL")),"_",
                    case 
                       when ReqDate is null then "19000101"
                       else format_date("%Y%m%d",ReqDate)
                    end,"T",
                    case 
                       when ReqTime is null then "000000"
                       else format_time("%H%M%S",ReqTime)
                    end)  as tran_uid,
                    
             cast(Concat(case 
                            when ReqDate is null then "1900-01-01"
                            else format_date("%Y-%m-%d",ReqDate)
                         end,"T",
                         case 
                            when ReqTime is null then "00:00:00"
                            else format_time("%H:%M:%S",ReqTime)
                         end) as datetime)  as Trans_datetime,
             file_name,
             upper(trim(ReqStore)) as store_id,
             upper(trim(ReqType)) as transactiontype,
             "" as tran_qualifier,
             ifnull(ReqAmt,0) tran_amount,
             0 as discount_amt  
      from `pdh_rd_apm.alipay_linkly`
      where AlipayEnabled = "Y"
      and ifnull(ReqStore,"NULL") <> "NULL"
      and ifnull(ReqAmt,0) <> 0
      and ResRT =    "TRANSACTION APPROVED"
      and ReqMT in (200) 
      and upper(trim(ReqType)) in ("N","N-","P","R","30001000","30002000") 
      and ReqDate is not NULL
      and OrigData = "Alipay"),
   tred as (
       Select concat("ED_",ifnull(retrieval_ref_num,"NULL"),"_",
                    (case 
                       when pan is Null then "NULL"
                       when length(trim(pan)) < 10 then trim(pan)
                       else concat(left(trim(pan),6),
                                   repeat("*",length(trim(pan)) - 9),
                                   right(trim(pan),3)
                                  )
                     end),"_",
                    format_datetime("%Y%m%dT%H%M%S",datetime(local_timestamp))) as tran_uid,
              datetime_trunc(datetime(local_timestamp), second) as Trans_datetime,
              file_name,
              upper(left(trim(card_acceptor_terminal_id),5)) store_id,
              Upper(cast(txn_type_indicator as string))as transactiontype,
              "EDP" as tran_qualifier, 
              ifnull(amount_txn,0) as  tran_amount,
              0 as discount_amt 
    from `pdh_rd_data_navigator.edwp_txnact`
    whereÂ EDEnabled = "Y"
      and txn_disposition = 1
      and local_timestamp is not NULL
      and ifnull(amount_txn,0)  <> 0
      and right(cast(txn_type_indicator as string),4) in ("1000","2000")
  ),
  tran_combined as (           select * from trqc where ifnull(store_id,"") <> ""
                    Union all Select * from trdp where ifnull(store_id,"") <> ""
                    union all Select * from trlk where ifnull(store_id,"") <> ""
                    union all Select * from trqp where ifnull(store_id,"") <> ""
                    union all Select * from tred where ifnull(store_id,"") <> ""),
  trn_seq as (select *, row_number() over(partition by tran_uid) tran_uid_seq
             from tran_combined)
  select trn.tran_uid,
           upper(trim(ifNull(rsd.state,""))) state,
           concat(upper(trim(ifNull(rsd.site_name,""))),
                   case
                     when ifNull(rsd.site_name,"") = "" or
                          ifNull(rsd.suburb,"") = "" then ""
                     else ","
                   end,
                   upper(trim(ifNull(rsd.suburb,"")))) as business_area,
           upper(trim(rsd.division)) as division, 
           trn.store_id,
           tt.record_type as record_type,
           trn.file_name filename,
           trn.Trans_datetime as transaction_time,
           case upper(rsd.is_online)
              when "ONLINE" then "Y"
              Else "N"
           end as eft_flag,
           abs(trn.tran_amount)  * tt.settlement_factor as amount,
           abs(trn.discount_amt) * tt.settlement_factor * -1 as discount_amt,
           batch_start_yyyy_mm_dd_hh_mm_ss as last_update_datetime,	
           "Pre Settlement" as last_updated_by
    from (Select * from trn_seq 
           where tran_uid not in (select tran_uid from trn_seq 
                                  where tran_uid_seq = 2)  
         ) trn
    join `pdh_ref_ds.ref_store_details` rsd 
         on upper(trim(rsd.store_id)) = trn.store_id
          and rsd.is_closed = False
    join `pdh_ref_ds.ref_merchant_settlement_window` msw
         on msw.is_active = "Y"
        and ifnull(msw.file_prefix_presettle,"") <> ""
        and msw.division = upper(trim(rsd.division))
    join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.settlement_factor <> 0
          and tt.transaction_type = trn.transactiontype
          and tt.tran_qualifier = case left(trn.tran_uid,2)
                                     when "QC" then msw.division_type
                                     else trn.tran_qualifier
                                  end
    join `pdh_ref_ds.ref_str_to_sap_customermapping` scm
      on upper(trim(scm.wpay_store_number)) = upper(trim(rsd.store_id)) 
      and upper(ifnull(scm.active_flag,"")) <>  "N" 
      and ifnull(scm.wpay_company_code,"") <> ""
    left join `pdh_analytics_ds.stlm_standard_settlement_table` std
         on std.tran_uid = trn.tran_uid
    where  ifnull(tt.settlement_factor,0) <> 0
      and  std.tran_uid is null
      and  trn.Trans_datetime >
                Case
                   when msw.last_execution_time is null then cast("1900-01-01" as datetime)
                   else cast(cast(msw.last_execution_time as date) + msw.days_lookback as datetime)
                end
      and  trn.Trans_datetime > cast(msw.earliest_date as datetime)
      and   trn.Trans_datetime
            < cast(concat(format_date("%Y-%m-%d",sys_date), "T00:00:00") as datetime);
--
set batch_end_yyyy_mm_dd_hh_mm_ss = datetime_trunc(current_datetime("Australia/Sydney"),second);
--Allways Create CSV Input Header
Insert into `pdh_analytics_ds.stlm_pre_settlement_csv`
     values("H",  "store_id","amount_in_dollar");
--
--Create CSV Input Details if exists
Insert into `pdh_analytics_ds.stlm_pre_settlement_csv`
   with DET as (
            select 
                 std.store_id,
                 round(sum(std.amount + std.discount_amt),2)  as amount
            from `pdh_analytics_ds.stlm_pre_settlement_table` std
            join `pdh_ref_ds.ref_merchant_settlement_window` msw
                 on msw.division = std.division
                and ifnull(msw.file_prefix_presettle,"") <> ""
            group by store_id
             )
     select "D" as record_type,
            store_id,
            case 
               when mod(amount * 100,100) = 0  then concat(cast(amount as string) , ".00")
               when mod(amount * 100,10)  = 0  then concat(cast(amount as string) , "0")
               else cast(amount as string)
        end  amount_in_dollar
     from DET
     order by store_id;
          --
     --Alwys Create CSV Input Trailor
     if (Select count(*) from pdh_analytics_ds.stlm_pre_settlement_csv) > 0 then
        Insert into pdh_analytics_ds.stlm_pre_settlement_csv
          (record_type,store_id)
          select "T", cast(count(*) - 1 as string)
          from `pdh_analytics_ds.stlm_pre_settlement_csv`;
     end if;
      --
      --Allways CSV Control
      insert into pdh_analytics_ds.file_gen_details 
         select  batch,
                 cast(batch_end_yyyy_mm_dd_hh_mm_ss as date), 
                 lower(concat(msw.file_prefix_presettle,"presettle")),
                 true,
                 null, 
                 ifnull(min(std.transaction_time),datetime_add(batch_end_yyyy_mm_dd_hh_mm_ss,INTERVAL 0 second)),
                 ifnull(max(std.transaction_time),datetime_add(batch_end_yyyy_mm_dd_hh_mm_ss,INTERVAL 0 second)), 
                 ifnull(max(std.transaction_time),datetime_add(batch_end_yyyy_mm_dd_hh_mm_ss,INTERVAL -1 day)),
                 null
        from `pdh_ref_ds.ref_merchant_settlement_window` msw
        left join `pdh_analytics_ds.stlm_pre_settlement_table` std
               on msw.division = std.division
        where msw.is_active = "Y"
          and ifnull(msw.file_prefix_presettle,"") <> ""
        group by msw.file_prefix_presettle;
--End of Script
--