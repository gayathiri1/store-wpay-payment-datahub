--RULE8 Remove Project Reference, point store_details and response_code to ref_ds
Declare backMonth INT64 Default -10;
DECLARE StartDate Date DEFAULT DATE_ADD(DATE_TRUNC(Current_Date("Australia/Sydney"), month),  INTERVAL backMonth MONTH);
DECLARE EndDate Date DEFAULT DATE_ADD(StartDate,  INTERVAL 11 MONTH);
DECLARE RptStartDate Date DEFAULT DATE_ADD(EndDate,  INTERVAL -8 MONTH);
DECLARE MonAvgStartDate Date DEFAULT DATE("2020-10-01");
--
if Exists(Select File_Date
          From `pdh_rd_data_navigator.gfs_pdh_txn_interface`
          Where File_Date  = Current_Date("Australia/Sydney") - 1
          Limit 1) Then
  Truncate Table `pdh_staging_ds.Rule8_Output`;
    Insert into `pdh_staging_ds.Rule8_Output` 
    With  CashOutDet as (
              Select Upper(Trim(Case
                                   When IFNUll(rc0.Merchant_to_report,"") <> "" then rc0.Merchant_to_report
                                   Else mh.division
                                End)) as Merchant,
         (case upper(trim(mh.division)) when "LIVE GROUP" then mh.store_id else "" end) as store_id,
         (case upper(trim(mh.division)) when "LIVE GROUP" then mh.site_name else "" end) as site_name, 
                    
            DATE_TRUNC(Date(tstamp_local),month) as FirstOfMonth,
            cashout_total * 0.01 as Cashout
        FROM `pdh_rd_data_navigator.gfs_pdh_txn_interface` trn
        Join `pdh_ref_ds.ref_store_details` mh
            on UPper(trim(left(trn.Net_Term_ID,5))) =upper(trim(mh.store_id))
            and mh.division is not Null
            and mh.division <> ""
        join pdh_ref_ds.ref_response_code r 
             on trn.act_code = r.action_code and r.approval_flag = "Y"
                                
        left join `pdh_staging_ds.Compliance_Control_Table` rc0
                on rc0.Rule_ID = 0
                and rc0.Attribute ="Merge"
                and Upper(trim(rc0.Merchant)) = Upper(Trim(mh.Division))
        Where trn.Net_Term_ID is not NULL
            and trn.Net_Term_ID <> ""
            and trn.pos_crdhldr_presnt = "0"
            and trn.cashout_total <> 0
            and Date(trn.tstamp_local) >= StartDate
            and Date(trn.tstamp_local) < EndDate
            
   ),
    
   -- TrnSum 
    Monthly_Cashout as (
        Select Merchant, 
        store_id,
        site_name,
        FirstOfMonth, 
        max(Date_Diff(Date_add(FirstOfMonth,INTERVAL 1 MONTH),
                  FirstOfMonth,DAY)) Days_InMonth,
        sum(Cashout) as Cashout
        From CashOutDet
        Group By Merchant,store_id,site_name, FirstOfMonth
    )
    /*History_Grouped as (
     Select Upper(Trim(Case 
                          When IFNUll(rc00.Merchant_to_report,"") <> "" then rc00.Merchant_to_report
                          Else hc.Merchant
                       End)) as Merchant,
            hc.Cashout_Month FirstOfMonth,
            hc.Days_inMonth,
            hc.Cashout_Amount as Cashout
            
    From `pdh_staging_ds.Cashout_History` hc
    left join `pdh_staging_ds.Compliance_Control_Table` rc00
                   on rc00.Rule_ID = 0
                  and rc00.Attribute ="Merge" 
                  and Upper(Trim(rc00.Merchant)) = Upper(Trim(hc.Merchant))),
   HistorySum As (
      Select Merchant, FirstOfMonth, 
                       max(Days_inMonth) as Days_inMonth,
                       sum(Cashout) as Cashout
      From History_Grouped
      Group By  Merchant, FirstOfMonth),
  Monthly_Cashout as (
      Select Case 
                When hs.Merchant is Null then ts.Merchant
                Else hs.Merchant
             End As Merchant,
             Case
                When hs.FirstOfMonth is Null then ts.FirstOfMonth
                Else hs.FirstOfMonth
             End As FirstOfMonth,
             Case
                When hs.Days_inMonth is Null then ts.Days_inMonth
                Else hs.Days_inMonth
             End As Days_inMonth,
             
             Case
                When IFNULL(hs.Cashout,0) = 0 then IFNull(ts.Cashout,0)
                Else  IFNULL(hs.Cashout,0)
             End AS Cashout
     From TrnSum ts
     Full Join HistorySum hs 
           On hs.Merchant = ts.Merchant
          and hs.FirstOfMonth = ts.FirstOfMonth
      )*/
    Select 
        m.Merchant,
        m.store_id,
        m.site_name,
        m.FirstOfMonth,
        m.Days_InMonth,
        m.Cashout,
        Case
           When m.FirstOfMonth < MonAvgStartDate then Null
           When (Case When IFNULL(p1.Cashout,0) = 0 then 0 Else p1.Days_InMonth End +
                 Case When IFNULL(p2.Cashout,0) = 0 then 0 Else p2.Days_InMonth End +
                 Case When IFNULL(p3.Cashout,0) = 0 then 0 Else p3.Days_InMonth End) = 0 then 0
           Else (IFNULL(p1.Cashout,0) + IFNULL(p2.Cashout,0) + IFNULL(p3.Cashout,0)) /
                (Case When IFNULL(p1.Cashout,0) = 0 then 0 Else p1.Days_InMonth End +
                 Case When IFNULL(p2.Cashout,0) = 0 then 0 Else p2.Days_InMonth End +
                 Case When IFNULL(p3.Cashout,0) = 0 then 0 Else p3.Days_InMonth End)
        End avg_daily_Cashout_3mon,
        Case
            When m.FirstOfMonth < MonAvgStartDate then Null 
            When (Case When IFNULL(p1.Cashout,0) = 0 then 0 Else 1 End +
                  Case When IFNULL(p2.Cashout,0) = 0 then 0 Else 1 End +
                  Case When IFNULL(p3.Cashout,0) = 0 then 0 Else 1 End) = 0 then 0
            Else
                (IFNULL(p1.Cashout,0) + IFNULL(p2.Cashout,0) + IFNULL(p3.Cashout,0)) /
                (Case When IFNULL(p1.Cashout,0) = 0 then 0 Else 1 End +
                 Case When IFNULL(p2.Cashout,0) = 0 then 0 Else 1 End +
                 Case When IFNULL(p3.Cashout,0) = 0 then 0 Else 1 End)
        End Rollin_3mon_avg,
        rc1.value * 0.01 as Threshold1,
        rc2.value * 0.01 as Threshold2,
        rc3.value as Threshold3,
        Current_Datetime() Datetime_Created
        From Monthly_Cashout m
        Left Join Monthly_Cashout p1 on p1.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p1.FirstOfMonth, INTERVAL 1 MONTH)
                                         and p1.store_id = m.store_id and p1.site_name= m.site_name
        Left Join Monthly_Cashout p2 on p2.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p2.FirstOfMonth, INTERVAL 2 MONTH)
                                        and p2.store_id = m.store_id and p2.site_name= m.site_name
        Left Join Monthly_Cashout p3 on p3.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p3.FirstOfMonth, INTERVAL 3 MONTH)
                                        and p3.store_id = m.store_id and p3.site_name= m.site_name
        left join `pdh_staging_ds.Compliance_Control_Table` rc1
        on rc1.Rule_ID = 8
        and rc1.Attribute ="Ratio_Cashout per month to Average Cashout last 3 months_Low"
        left join `pdh_staging_ds.Compliance_Control_Table` rc2
        on rc2.Rule_ID = 8
        and rc2.Attribute ="Ratio_Cashout per month to Average Cashout last 3 months_High"
        left join `pdh_staging_ds.Compliance_Control_Table` rc3
        on rc3.Rule_ID = 8
        and rc3.Attribute ="Single PAN Cashout Above Treshold"
    Where m.FirstOfMonth >= RptStartDate and m.FirstOfMonth < EndDate
    Order By 4,1;
End if 