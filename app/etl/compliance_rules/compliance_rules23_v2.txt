


Declare backMonth INT64 Default -10;
DECLARE StartDate Date DEFAULT DATE_ADD(DATE_TRUNC(Current_Date("Australia/Sydney"), month),  INTERVAL backMonth MONTH);
DECLARE EndDate Date DEFAULT DATE_ADD(StartDate,  INTERVAL 11 MONTH);
DECLARE RptStartDate Date DEFAULT DATE_ADD(EndDate,  INTERVAL -8 MONTH);
DECLARE MonAvgStartDate Date DEFAULT DATE("2020-10-01");
DECLARE SysDateTime datetime DEFAULT current_datetime("Australia/Sydney");
if Exists(Select File_Date 
          From `pdh_rd_data_navigator.gfs_pdh_txn_interface`
          Where File_Date  = Current_Date("Australia/Sydney") - 1
          Limit 1) Then
--
Truncate Table `pdh_analytics_ds.Rule23_output`;
Insert into    `pdh_analytics_ds.Rule23_output`


With SettlementDetail as (
    select 
        Upper(left(trim(dn.net_term_id),5)) StoreID,
        --Upper(trim(dn.scheme)) scheme,
        -- Calling function
              pdh_ref_ds.get_scheme(dn.proc_id_iss_b, dn.inst_id_recon_iss) scheme,
        DATE_TRUNC(CAST(dn.tstamp_trans AS DATE),month) as FirstOfMonth,
        Case dn.mti
           when '1440' then ' REVERSAL'
           else ''
        End ReversalCode,
        Case upper(trim(proc_id_iss_b))
           When 'RED' then
                Case Upper(trim(t.abbr))
                   when 'PURCHASE' then 'REDEMPTION'
                   when 'REFUND' then 'ACTIVATION'
                   when 'BALANCE INQUIRY - SAVINGS' then 'BALANCE INQUIRY'
                   else Upper(trim(t.abbr))
               end
          else Upper(trim(t.abbr))
        end tran_type_abbr,
        dn.amt_recon_net, 
         1 as trans_count
    from `pdh_rd_data_navigator.gfs_pdh_txn_interface` dn   
    Join `pdh_ref_ds.ref_transaction_types` t on safe_cast(dn.tran_type_id as int64) = cast(t.dn_tran_code as int64)
    join `pdh_ref_ds.ref_response_code` r on dn.act_code = r.action_code
    WHERE upper(trim(r.approval_flag)) = 'Y'
      and dn.amt_recon_net <> 0
      and cast(dn.tstamp_trans as date) >= '2021-06-28'
      and cast(dn.tstamp_trans as date) < Date_sub(current_date,Interval 3 day)
 Union ALL Select Left(CONCAT(Upper(storeid), "000"),5) StoreID,
                     Upper(trim(schemeName)) scheme,
                     DATE_TRUNC(PARSE_DATE("%Y%m%d", CAST(Date AS STRING)),month) as FirstOfMonth,
                     '' As   ReversalCode,
                     Upper(trim(transactionType)) as tran_type_abbr,
                     CAST(amount AS NUMERIC) *100 amt_recon_net,
                    1 as trans_count
              from `pdh_analytics_ds.dpay`
              where Date >=20210705 
                and Date < CAST(FORMAT_DATE('%Y%m%d', Date_sub(current_date,Interval 3 day)) AS INT64)),
 --     
  GetMetchant As (
    Select sd.*, 
           Upper(trim(Case 
                         When ifNULL(rc0.Merchant_to_report,"") <> "" then rc0.Merchant_to_report
                         Else mh.division
                      End)) as Merchant,
        upper(trim(case(mh.division)  when "LIVE GROUP" then mh.store_id else "" end)) as store_id,
          upper(trim(case(mh.division)    when "LIVE GROUP" then mh.site_name else "" end)) as site_name, 
        -- mh.store_id,
         --mh.site_name          

    From SettlementDetail sd 
    Join `pdh_ref_ds.ref_store_details` mh 
         on  Upper(trim(mh.store_id)) = sd.StoreId
         and ifNull(mh.division,"") <> "" 
left join `pdh_ref_ds.ref_Compliance_Control_Table` rc0
                   on rc0.Rule_ID = 0
                  and rc0.Attribute ="Merge" 
                  and upper(trim(rc0.Merchant)) = upper(trim(mh.division))
    ),
settlement as 
(SELECT gm.Merchant,
       gm.store_id, 
       gm.site_name,
       gm.scheme, 
       gm.FirstOfMonth,
       SysDateTime as Datetime_Created,
       Sum(ifNull(tt.spend_factor,0) * gm.amt_recon_net) * 0.01 as Trans_value,
       sum(trans_count)  as Trans_count
    
FROM  GetMetchant gm
left join `pdh_ref_ds.ref_tran_type_codes` tt
     on Upper(trim(tt.tran_type_desc)) = trim(Concat(gm.tran_type_abbr,gm.ReversalCode))
Group By gm.Merchant, gm.store_id,gm.site_name, gm.scheme, gm.FirstOfMonth,SysDateTime
Order by 5,1,2,3,4),

 monthly as (SELECT Merchant,					
          store_id,					
          site_name,					
          FirstOfMonth,	
         Datetime_Created,				
          Sum(Trans_value) as Trans_value	,	
          sum( trans_count)	 as trans_count		
   FROM 		settlement			
   Where FirstOfMonth >= StartDate and FirstOfMonth < EndDate					
   Group By Merchant,store_id, site_name,	 Datetime_Created,				
            FirstOfMonth)


    Select m.Merchant,
           m.store_id,
           m.site_name,
           m.FirstOfMonth,
           m.Trans_value,
           m.Trans_count,
           m.trans_value/m.trans_count as avg_trans,

Case
              When m.FirstOfMonth < MonAvgStartDate then Null
              When ((Case When IFNULL(p1.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p2.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p3.Trans_value,0) = 0 then 0 Else 1 End)) = 0 then NULL
              Else
                (IFNULL(p1.Trans_value,0) + 
                 IFNULL(p2.Trans_value,0) + 
                 IFNULL(p3.Trans_value,0)) * 1.0 /
                   (IFNULL(p1.Trans_count,0) + 
                 IFNULL(p2.Trans_count,0) + 
                 IFNULL(p3.Trans_count,0)) * 1.0 
          End As RollingAvg_last_3mon_trans,

   Case
              When m.FirstOfMonth < MonAvgStartDate then Null
              When ((Case When IFNULL(p1.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p2.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p3.Trans_value,0) = 0 then 0 Else 1 End)) = 0 then NULL
              Else
                (IFNULL(p1.Trans_value,0) + 
                 IFNULL(p2.Trans_value,0) + 
                 IFNULL(p3.Trans_value,0)) * 1.0 /
                   ((Case When IFNULL(p1.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p2.Trans_value,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p3.Trans_value,0) = 0 then 0 Else 1 End))
          End As Rolling_Avg_last_3mon_TV,
          Case
              When m.FirstOfMonth < MonAvgStartDate then Null
              When ((Case When IFNULL(p1.Trans_count,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p2.Trans_count,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p3.Trans_count,0) = 0 then 0 Else 1 End)) = 0 then NULL
              Else
                (IFNULL(p1.Trans_count,0) + 
                 IFNULL(p2.Trans_count,0) + 
                 IFNULL(p3.Trans_count,0)) * 1.0 /
                   ((Case When IFNULL(p1.Trans_count,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p2.Trans_count,0) = 0 then 0 Else 1 End) +
                    (Case When IFNULL(p3.Trans_count,0) = 0 then 0 Else 1 End))
          End As Rolling_Avg_last_3mon_TC,

 
         rcvd1.value * 0.01 as Avgtrns_Low,
         rcvd2.value * 0.01 as Avgtrns_High,
         
        m.Datetime_Created
   From Monthly m
   Left Join Monthly p1 on p1.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p1.FirstOfMonth, INTERVAL 1 MONTH)
                             and p1.store_id = m.store_id and p1.site_name= m.site_name
   Left Join Monthly p2 on p2.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p2.FirstOfMonth, INTERVAL 2 MONTH)
                              and p2.Store_id = m.Store_id and p2.site_name= m.site_name	
   Left Join Monthly p3 on p3.Merchant = m.Merchant and m.FirstOfMonth = Date_Add(p3.FirstOfMonth, INTERVAL 3 MONTH)
                          and p3.Store_id = m.Store_id and p3.site_name= m.site_name	
   left join `pdh_ref_ds.ref_Compliance_Control_Table` rcvd1
            on rcvd1.Rule_ID = 23
           and Trim(rcvd1.Attribute) ="Ratio_Avg transaction value per month to Average transaction value last 3 months_Low"
   left join `pdh_ref_ds.ref_Compliance_Control_Table` rcvd2
            on rcvd2.Rule_ID = 23
           and Trim(rcvd2.Attribute) ="Ratio_Avg transaction value per month to Average transaction value last 3 months_High"
  
  Where m.FirstOfMonth >= RptStartDate and m.FirstOfMonth < EndDate;
End if