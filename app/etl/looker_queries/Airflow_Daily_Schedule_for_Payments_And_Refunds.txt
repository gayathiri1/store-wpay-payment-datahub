create or replace table `wpay_analytics.wpay_payments_and_refunds` as
(



with monthly as
(
  select
  'Monthly' as Timeframe,
  date(concat(left(cast(trans.tstamp_trans as string),7), "-01")) as commencement_date,
  left(cast(trans.tstamp_trans as string),7) as Period,
  stores.invoice_group invoice_group,
  stores.company company,
  stores.merchant_group as Merchant_group,
  stores.merchant_portal_mg as merchant_portal_mg,
  stores.brand as Brand,
  stores.site_name,
  case when stores.is_online = "Online" then "Online" when stores.is_online = "Not Online" then "In store" end as channel,
  left(trans.net_term_id,5) as Store_ID,
  calc_scheme as Scheme,
  calc_card_type as Card_type,
  'True' as on_graph,
  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then 1 else 0 end)
  ) as Purchase_count,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then 1 else 0 end)
  ) as Refund_count,


  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then transaction_total/100 else 0 end)
  ) as Purchase_amount,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then transaction_total/100 else 0 end)
  ) as Refund_amount,

  from
  wpay_analytics.wpay_billing_engine_tran_dtl trans
  left join
  pdh_ref_ds.ref_store_details stores
  on
  left(trans.net_term_id,5) = stores.store_id
  where
  (trans.calc_approval_flag = 'A' )
  and calc_card_type not in ('C','D','H','P','R')
  
  and trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION','PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL', 'REFUND', 'REFUND REVERSAL')
  -- and trans.tstamp_trans between date_sub((select max(tstamp_trans) from wpay_analytics.wpay_billing_engine_tran_dtl), interval )

  and left(cast(trans.tstamp_trans as string),7) between 
  left(string(date_sub((select max(date(tstamp_trans)) from wpay_analytics.wpay_billing_engine_tran_dtl) , interval 6 month)), 7)
  and left(cast((select max(date(tstamp_trans)) from wpay_analytics.wpay_billing_engine_tran_dtl) as string),7)

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14
)

-------------------------
-- WEEKLY
-------------------------

, weekly as
(
  select
  'Weekly' as Timeframe,
  dates.fw_start_date as commencement_date,
  -- concat('Wk-',right(format_date('%Y%W', dates.clndr_date), 2),' : ', format_date('%d-%b', dates.fw_start_date), ' to ', format_date('%d-%b', dates.fw_end_date)) as Period,
  concat(format_date('%d-%b', dates.fw_start_date), ' to ', format_date('%d-%b', dates.fw_end_date)) as Period,
  stores.invoice_group invoice_group,
  stores.company company,
  stores.merchant_group as Merchant_group,
  stores.merchant_portal_mg as merchant_portal_mg,
  stores.brand as Brand,
  stores.site_name,
  case when stores.is_online = "Online" then "Online" when stores.is_online = "Not Online" then "In store" end as channel,
  left(trans.net_term_id,5) as Store_ID,
  calc_scheme as Scheme,
  calc_card_type as Card_type,
  'True' as on_graph,
  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then 1 else 0 end)
  ) as Purchase_count,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then 1 else 0 end)
  ) as Refund_count,


  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then transaction_total/100 else 0 end)
  ) as Purchase_amount,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then transaction_total/100 else 0 end)
  ) as Refund_amount,


  from

  wpay_analytics.wpay_billing_engine_tran_dtl trans
  
  left join
  pdh_ref_ds.ref_store_details stores
  on
  left(trans.net_term_id,5) = stores.store_id
  left join
  `pdh_ref_ds.dim_date` dates
  on left(cast(trans.tstamp_trans as string),10) = string(dates.clndr_date)
  where
  (trans.calc_approval_flag = 'A' )
  and calc_card_type not in ('C','D','H','P','R')

  and trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION','PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL', 'REFUND', 'REFUND REVERSAL')

      and date(trans.tstamp_trans) between 
    date_sub((select max(fw_start_date) FROM
       wpay_analytics.wpay_billing_engine_tran_dtl fees   
    inner join 
      `pdh_ref_ds.dim_date` dates
    on 
      date(fees.tstamp_trans)  = dates.clndr_date	) , interval 9 week ) 
    and (select date(max(fees.tstamp_trans))     FROM
       wpay_analytics.wpay_billing_engine_tran_dtl fees)

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14
)



-------------------------
-- DAILY
-------------------------

, daily as
(
  select
  'Daily' as Timeframe,
  dates.clndr_date as commencement_date,
  format_date("%d-%m", tstamp_trans) as Period,
  stores.invoice_group invoice_group,
  stores.company company,
  stores.merchant_group as Merchant_group,
  stores.merchant_portal_mg as merchant_portal_mg,
  stores.brand as Brand,
  stores.site_name,
  case when stores.is_online = "Online" then "Online" when stores.is_online = "Not Online" then "In store" end as channel,
  left(trans.net_term_id,5) as Store_ID,
  calc_scheme as Scheme,
  calc_card_type as Card_type,

  case when string(date(tstamp_trans)) >= left(string(date_sub((select max(date(tstamp_trans)) from wpay_analytics.wpay_billing_engine_tran_dtl) , interval 31 day)), 10) then 'True' else 'False' end as on_graph,

  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then 1 else 0 end)
  ) as Purchase_count,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then 1 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then 1 else 0 end)
  ) as Refund_count,


  (sum(case when trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL') then transaction_total/100 else 0 end)
  ) as Purchase_amount,
  (sum(case when trans.calc_tran_type_description in
  ('REFUND') then transaction_total/100 else 0 end)
  -
  sum(case when trans.calc_tran_type_description in
  ('REFUND REVERSAL') then transaction_total/100 else 0 end)
  ) as Refund_amount,
 

  from
  wpay_analytics.wpay_billing_engine_tran_dtl trans
  
  left join
  pdh_ref_ds.ref_store_details stores
  on
  left(trans.net_term_id,5) = stores.store_id
  left join
  `pdh_ref_ds.dim_date` dates
  on left(cast(trans.tstamp_trans as string),10) = string(dates.clndr_date)
  where
  (trans.calc_approval_flag = 'A' )
  and calc_card_type not in ('C','D','H','P','R')

  and trans.calc_tran_type_description in
  ('PURCHASE','PURCHASE WITH CASHOUT','REDEMPTION','PURCHASE REVERSAL','PURCHASE WITH CASHOUT REVERSAL','REDEMPTION REVERSAL', 'REFUND', 'REFUND REVERSAL')
  
  -- and left(cast(trans.tstamp_trans as string),10) between 
  --   left(string(date_sub((select max(date(tstamp_trans)) from wpay_analytics.wpay_billing_engine_tran_dtl) , interval 31 day)), 10)
  --   and left(cast((select max(date(tstamp_trans)) from wpay_analytics.wpay_billing_engine_tran_dtl) as string),10)


  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14
)

, complete_output as(
  select * from monthly
  union all
  select * from weekly
  union all
  select * from daily
)


,scheme_card_type_lense_daily as(

select 

       "Scheme and card type" as lense_type,
       concat(Scheme, " " , Card_type) as lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from daily

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)

,scheme_card_type_lense_weekly as(

select 

       "Scheme and card type" as lense_type,
       concat(Scheme, " " , Card_type) as lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from weekly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)

, scheme_card_type_lense_monthly as(

select 

       "Scheme and card type" as lense_type,
       concat(Scheme, " " , Card_type) as lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from monthly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)


, merchant_lense_daily as(

select 

       "Merchant group" as lense_type,
       merchant_portal_mg lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from daily

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)

, merchant_lense_weekly as(

select 

       "Merchant group" as lense_type,
       merchant_portal_mg lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from weekly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)


, merchant_lense_monthly as(

select 

       "Merchant group" as lense_type,
       merchant_portal_mg lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from monthly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)


, channel_lense_daily as(

select 

       "Channel" as lense_type,
       channel lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from daily

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)

, channel_lense_weekly as(

select 

       "Channel" as lense_type,
       channel lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from weekly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)

, channel_lense_monthly as(

select 

       "Channel" as lense_type,
       channel lense,
       Timeframe,
       commencement_date,
       Period,
       invoice_group,
       company,
       Merchant_group,
       merchant_portal_mg,
       Brand,
       site_name,
       channel,
       Store_ID,
       Scheme,
       Card_type,
       on_graph,

       

       sum(Purchase_amount) purchase_amount,
       sum(Purchase_count) purchase_count,
       sum(Refund_amount) refund_amount,
       sum(Refund_count) refund_count,
  
  from monthly

  group by
  1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
     
)



select * from(
  select * from scheme_card_type_lense_daily
  union all
  select * from scheme_card_type_lense_weekly
  union all
  select * from scheme_card_type_lense_monthly
)
union all
select * from(
  select * from merchant_lense_daily
  union all
  select * from merchant_lense_weekly
  union all
  select * from merchant_lense_monthly
)
union all
select * from(
  select * from channel_lense_daily
  union all
  select * from channel_lense_weekly
  union all
  select * from channel_lense_monthly
)

);


create or replace view `wpay_analytics.vw_wpay_payments_and_refunds` as(
    select * from `wpay_analytics.wpay_payments_and_refunds`
)



---------------------------------------------------------

