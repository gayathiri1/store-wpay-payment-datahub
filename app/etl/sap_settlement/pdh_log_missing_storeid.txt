--Log missing Store Information_Split By company
--20221103 change column_name trasnaction_timestamp to transaction_timestamp
--20221110 for isg, get store_id from key_value when terminal id is empty
--20221110 Exclude transactions for excluded_issuers
--20221110 Include 7day settlement and Payfac
--20221130 for qc partner get store from key_value
--20221206 add function get_qc_store
--20230110 USE FUNCTION trans_in_stlm_window
--20230123 use pdh_load_time to seq
--20220130 Use function get_trans_uid
--20230202 Replace minitaf(gfs_pdh_txn_interface) by NRT(lv_gfs_pdh_txn_interface)
--20230209 replace pdh_rd_data_navigator.lv_gfs_pdh_txn_interface 
--              by pdh_rd_data_navigator_views.vw_lv_gfs_pdh_txn_interface
--20230314 add WPAYNZ
--20230317 includ excluded transactions
--20230515 Restrict division to its settlement_cycle
--Allow multiple run per day
--20230516 -Limit digitalpay to GIFT_CARD 
--          execute only if divisio exists for current hour
declare sys_datetime datetime default
 cast(format_datetime("%Y-%m-%dT%H:%M:%S",current_datetime("Australia/Sydney")) as datetime);
 declare syd_hour INT64 default (select extract(hour from current_time("Australia/Sydney")));
declare sys_date date DEFAULT current_date("Australia/Sydney");
DECLARE inp_lookup STRING DEFAULT "MST Settlement";
DECLARE batch string;
Declare nullstr string;
if (select count(*) 
    from `pdh_ref_ds.ref_merchant_settlement_window`
    where is_active = "Y"
      and settlement_cycle = syd_hour)  = 0 then
    return;
end if;  
--
--Get next Batch Number
CALL `pdh_ref_ds.get_nextbatch`(inp_lookup,batch);
if (ifnull(batch,"") in ("","NOContRec","UpdFailed")) then
 return;
end if;
--
--Delete Missing Store Details
delete `pdh_analytics_ds.sap_missing_store_log`
Where create_by = "Settlement Process";
--Add Missing Store Details
--
insert into `pdh_analytics_ds.sap_missing_store_log`
(batchnumber,store_id,switch_tran_date,comment,create_datetime,create_by,data_source,division, transaction_datetime )
--
with trqc as (
     Select pdh_ref_ds.get_tran_uid(
                                    "QC",
                                     qct.approvalcode, 
                                     qct.ReferenceNumber, 
                                     qct.BatchNumber, 
                                     nullstr,
                                     concat(CASE 
                                             when qct.transactiondate is null then "19000101"
                                            else format_date("%Y%m%d",qct.transactiondate)
                                            End,"T",
                                            CASE 
                                             when qct.transactiontime is null then "000000"
                                             else format_time("%H%M%S",qct.transactiontime)
                                            end),
                                      nullstr,
                                      nullstr, 
                                      nullstr, 
                                      0) as tran_uid,
            cast(qct.pdh_load_time as datetime) as pdh_load_time,
            cast(concat(CASE 
                           when qct.transactiondate is null then "1900-01-01"
                           else format_date("%Y-%m-%d",qct.transactiondate)
                        End,"T",
                        CASE 
                           when qct.transactiontime is null then "00:00:00"
                           else format_time("%H:%M:%S",qct.transactiontime)
                        end) as datetime)  as transaction_timestamp,
            pdh_ref_ds.get_qc_store(qct.outletcode,
                                    qct.Issuer,
                                    qct.outlet,
                                    qct.POSName) store_id,
            msw.division,
            upper(trim(qct.transactiontype)) as transactiontype
      from `pdh_rd_quickcilver.qc_detail_transactions`  qct
      join `pdh_ref_ds.ref_store_details` rsd on 
               upper(trim(rsd.store_id)) =  pdh_ref_ds.get_qc_store(qct.outletcode,
                                          qct.Issuer,
                                          qct.outlet,
                                          qct.POSName)
                and rsd.is_closed = False
      join `pdh_ref_ds.ref_str_to_sap_customermapping` scm  
            on upper(trim(scm.wpay_store_number)) = upper(trim(rsd.store_id))
           and upper(ifnull(scm.active_flag,"N")) <> "N" 
           and ifnull(scm.wpay_company_code,"") <> ""
      join  `pdh_ref_ds.ref_merchant_settlement_window` msw
             on msw.division = upper(trim(rsd.division))
            and msw.is_active = "Y"
            and msw.settlement_cycle = syd_hour --multiple run per day
            and msw.division_type <> "PARTNER"
      left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
      join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.transaction_type = upper(trim(qct.transactiontype))
          and tt.settlement_factor <> 0
          and tt.tran_qualifier = 
                concat( 
                       case 
                          when (wbs.store_id is null or 
                               msw.settle_by_store = "N") then msw.division_type
                          else wbs.division_type
                       end,
                       case   --20230313
                          when ifnull(scm.wpay_company_code,"") = "2025"
                           and qct.Merchant = "COUNTDOWN"
                           and qct.Issuer = "WPAY NEW ZEALAND LIMITED" then "WPAYNZ"
                          else ""
                       end)
 Where upper(trim(qct.transactionstatus)) =  "SUCCESS"
   and ifnull(amount_transacting_merchants_currency_or_points,0) <> 0
   and `pdh_ref_ds.trans_in_stlm_window`(
                   msw.settle_by_store,
                   wbs.store_id,
                   cast(concat(case 
                                  when qct.transactiondate is null then "1900-01-01"
                                  else format_date("%Y-%m-%d",qct.transactiondate)
                              end,"T",
                              case 
                                 when qct.transactiontime is null then "00:00:00"
                                 else format_time("%H:%M:%S",qct.transactiontime)
                              end) as datetime), 
                   msw.last_execution_time,       
                   wbs.last_execution_time, 
                   msw.days_lookback,
                   wbs.days_lookback,
                   msw.earliest_date,
                   wbs.earliest_date,
                   msw.day_lag,
                   wbs.day_lag,
                   msw.settlement_cutoff,
                   wbs.settlement_cutoff) = "Y"
  ),
--
trdp as (
 Select pdh_ref_ds.get_tran_uid(
                         "DP",
                         nullstr, 
                         trim(dpt.txnRef), 
                         0, 
                         nullstr,
                         nullstr,
                         nullstr,
                         nullstr, 
                         nullstr, 
                         0) as tran_uid,
        cast(dpt.pdh_load_time as datetime) as pdh_load_time,
        case 
           when dpt.txnTime is null then cast("1900-01-01T00:00:00" as datetime)
           else DATETIME_TRUNC(datetime(dpt.txnTime),SECOND)
        end as transaction_timestamp,
        upper(left(trim(dpt.terminal_id),5)) as store_id,
        msw.division,
        upper(trim(dpt.transactiontype)) as transactiontype
 from `pdh_rd_data_navigator.digitalpay_gc_txns` dpt
 join `pdh_ref_ds.ref_store_details` rsd 
            on upper(trim(rsd.store_id)) = upper(left(trim(dpt.terminal_id),5))
           and rsd.is_closed = False
join  `pdh_ref_ds.ref_merchant_settlement_window` msw
      on msw.division = upper(trim(rsd.division))
      and msw.is_active = "Y"
      and msw.settlement_cycle = syd_hour  --multiple run per day
left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.transaction_type = upper(dpt.transactiontype)
          and tt.settlement_factor <> 0
          and tt.tran_qualifier = 
                case
                   when length(dpt.txnRef) = length(replace(dpt.txnRef,".",""))  then "WEX" 
                   else "QC"  
                end
 where upper(trim(dpt.transactiontype)) in ("PURCHASE","REFUND")
   and upper(trim(dpt.MerchantName)) = "EVERYDAY PAY"
   and upper(trim(dpt.schemeName)) = "GIFT_CARD" --limit to GIFT_CARD
   and ifnull(dpt.responseCodeContainer,"") = "00"
   and ifnull(trim(dpt.txnRef),"") <> ""
   and (length(dpt.txnRef) - length(replace(dpt.txnRef,".",""))) in (0,2)
   and ifnull(dpt.amount,0) <> 0
   and `pdh_ref_ds.trans_in_stlm_window`(
          msw.settle_by_store,
          wbs.store_id,
          case
             when dpt.txnTime is null then cast("1900-01-01T00:00:00" as datetime)
             else datetime_trunc(datetime(dpt.txnTime),second)
          end, 
          msw.last_execution_time,       
          wbs.last_execution_time, 
          msw.days_lookback,
          wbs.days_lookback,
          msw.earliest_date,
          wbs.earliest_date,
          msw.day_lag,
          wbs.day_lag,
          msw.settlement_cutoff,
          wbs.settlement_cutoff) = "Y"
    ),
 trlk as (
   Select pdh_ref_ds.get_tran_uid(  "LK",
                                     nullstr, 
                                     lkt.ResRef,
                                     0, 
                                     nullstr,
                                     concat(CASE 
                                             when lkt.ReqDate is null then "19000101"
                                            else format_date("%Y%m%d",lkt.ReqDate)
                                            End,"T",
                                            CASE 
                                             when lkt.ReqTime is null then "000000"
                                             else format_time("%H%M%S",lkt.ReqTime)
                                            end),
                                      nullstr,
                                      nullstr, 
                                      nullstr, 
                                      0) as tran_uid,
         cast(lkt.pdh_load_time as datetime) as pdh_load_time,
         cast(Concat(case 
                        when lkt.ReqDate is null then "1900-01-01"
                        else format_date("%Y-%m-%d",lkt.ReqDate)
                     end,"T",
                     case 
                        when lkt.ReqTime is null then "00:00:00"
                        else format_time("%H:%M:%S",lkt.ReqTime)
                     end) as datetime)  as transaction_timestamp,
          upper(trim(lkt.ReqStore)) as store_id,
          msw.division,
          upper(trim(lkt.ReqType)) as transactiontype
   from `pdh_rd_apm.alipay_linkly` lkt
   join `pdh_ref_ds.ref_store_details` rsd on 
               upper(trim(rsd.store_id)) =  upper(trim(lkt.ReqStore))
                and rsd.is_closed = False
      join  `pdh_ref_ds.ref_merchant_settlement_window` msw
             on msw.division = upper(trim(rsd.division))
            and msw.is_active = "Y"
            and msw.settlement_cycle = syd_hour --multiple run per day
   left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
   join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.transaction_type = upper(trim(lkt.ReqType))
          and tt.tran_qualifier =   ""
          and tt.settlement_factor <> 0

   where lkt.ReqAmt <> 0
     and lkt.ResRT = "TRANSACTION APPROVED"
     and lkt.ReqMT in (200) --Stop 400
     and upper(trim(lkt.ReqType)) in ("N","N-","P","R","30001000","30002000")
     and lkt.ReqDate is not NULL
     and lkt.OrigData = "Alipay"
     and `pdh_ref_ds.trans_in_stlm_window`(
                   msw.settle_by_store,
                   wbs.store_id,
                   cast(concat(case 
                               when lkt.ReqDate is null then "1900-01-01"                
                               else format_date("%Y-%m-%d",lkt.ReqDate)
                            end,"T",
                            case 
                               when lkt.ReqTime is null then "00:00:00"
                               else format_time("%H:%M:%S",lkt.ReqTime)
                            end) as datetime), 
                   msw.last_execution_time,       
                   wbs.last_execution_time, 
                   msw.days_lookback,
                   wbs.days_lookback,
                   msw.earliest_date,
                   wbs.earliest_date,
                   msw.day_lag,
                   wbs.day_lag,
                   msw.settlement_cutoff,
                   wbs.settlement_cutoff) = "Y"
     ),
 tred as (
 Select pdh_ref_ds.get_tran_uid(
                                "ED",
                                nullstr, 
                                dn.retrieval_ref_num,
                                0, 
                                dn.pan,
                                format_datetime("%Y%m%dT%H%M%S",datetime(dn.local_timestamp)),
                                nullstr,
                                nullstr, 
                                nullstr, 
                                0) as tran_uid,
        cast(dn.pdh_load_time as datetime) as pdh_load_time,
        datetime_trunc(datetime(dn.local_timestamp), second) as transaction_timestamp,
        upper(left(trim(dn.card_acceptor_terminal_id),5)) as store_id,
        msw.division,
        Upper(cast(dn.txn_type_indicator as string)) as transactiontype
 from `pdh_rd_data_navigator.edwp_txnact` dn
 Join `pdh_analytics_ds.ref_transaction_types` t 
          on safe_cast(dn.txn_type_indicator as int64) = safe_cast(t.dn_tran_code as int64)
 join `pdh_ref_ds.ref_response_code` r on safe_cast(dn.action_code  as int64)
                                             = safe_cast(r.action_code as int64)
 join `pdh_analytics_ds.ref_tran_type_codes` tt
                 on Upper(trim(tt.tran_type_desc)) = 
                    pdh_ref_ds.get_calc_trans_type("", t.abbr ,safe_cast(dn.mti as string))
                and tt.settlement_amount_flag <> 0
                and tt.spend_factor <> 0
 join `pdh_ref_ds.ref_store_details` rsd 
      on upper(trim(rsd.store_id)) = upper(left(trim(dn.card_acceptor_terminal_id),5))
      and rsd.is_closed = False
 join  `pdh_ref_ds.ref_merchant_settlement_window` msw
       on msw.division = upper(trim(rsd.division))
      and msw.is_active = "Y"
      and msw.settlement_cycle = syd_hour --multiple run per day
 left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
  where dn.txn_disposition = 1
  and dn.local_timestamp is not NULL
  and ifnull(dn.amount_txn,0)  <> 0
  and `pdh_ref_ds.trans_in_stlm_window`(msw.settle_by_store,
                                        wbs.store_id,
             datetime_trunc(datetime(dn.local_timestamp), second), 
                                        msw.last_execution_time,       
                                        wbs.last_execution_time, 
                                        msw.days_lookback,
                                        wbs.days_lookback,
                                        msw.earliest_date,
                                        wbs.earliest_date,
                                        msw.day_lag,
                                        wbs.day_lag,
                                        msw.settlement_cutoff,
                                        wbs.settlement_cutoff) = "Y"
    ),
 trcy as ( Select pdh_ref_ds.get_tran_uid(
                                "CY",
                                nullstr, 
                                nullstr,
                                0,
                                nullstr,
                                concat(
                                left(rpad(cast(t.transaction_timestamp as string),14,"0"),8),"T",
                               right(rpad(cast(t.transaction_timestamp as string),14,"0"),6)),
                                cast(t.tran_uid as string),
                                nullstr, 
                                t.transaction_type, 
                                t.transaction_amount) as tran_uid, 
        cast(t.pdh_load_time as datetime) as pdh_load_time,       
        cast(Concat(left(rpad(cast(t.transaction_timestamp as string),14,"0"),4), "-",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),5,2), "-",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),7,2), "T",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),9,2),":",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),11,2),":",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),13,2)
              ) as datetime) as transaction_timestamp,
        case
           when trim(ifnull(t.terminal_id,"")) <> ""   
                then upper(left(trim(t.terminal_id),5))
           else upper(left(trim(rk.value),5)) --2022-11-02 INclude Amex transactions
        end as store_id,
        msw.division,
        upper(trim(t.transaction_type)) as transactiontype
from `pdh_rd_data_navigator.isg_wpay_tran` t
left join pdh_ref_ds.ref_key_value rk 
           on rk.attribute = "merchant-terminalid mapping"
          and upper(trim(rk.key)) = upper(trim(cast(t.merchant_id as string))) 
 join `pdh_ref_ds.ref_store_details` rsd 
      on upper(trim(rsd.store_id)) = 
        case
           when trim(ifnull(t.terminal_id,"")) <> ""   
                then upper(left(trim(t.terminal_id),5))
           else upper(left(trim(rk.value),5)) 
        end
      and rsd.is_closed = False
 join  `pdh_ref_ds.ref_merchant_settlement_window` msw
       on msw.division = upper(trim(rsd.division))
      and msw.is_active = "Y"
      and msw.settlement_cycle = syd_hour --multiple run per day
 left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
 join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.transaction_type = upper(trim(t.transaction_type))
          and tt.tran_qualifier = "CY"
          and tt.settlement_factor <> 0
 where upper(trim(t.transaction_type)) in ("PURCHASE","REFUND")
   and ifnull(t.transaction_approval_status,0) = 0
   and ifnull(t.transaction_amount,0) <> 0
   and ifnull(t.transaction_timestamp,0) <> 0
    and `pdh_ref_ds.trans_in_stlm_window`(msw.settle_by_store,
                                        wbs.store_id,
             safe_cast(Concat(left(rpad(cast(t.transaction_timestamp as string),14,"0"),4),
                              "-",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),5,2), "-",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),7,2), "T",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),9,2),":",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),11,2),":",
               substring(rpad(cast(t.transaction_timestamp as string),14,"0"),13,2)
              ) as datetime), 
                                        msw.last_execution_time,       
                                        wbs.last_execution_time, 
                                        msw.days_lookback,
                                        wbs.days_lookback,
                                        msw.earliest_date,
                                        wbs.earliest_date,
                                        msw.day_lag,
                                        wbs.day_lag,
                                        msw.settlement_cutoff,
                                        wbs.settlement_cutoff) = "Y"
   ),
 trqp as ( Select pdh_ref_ds.get_tran_uid(
                                "QP",
                                nullstr, 
                                nullstr,
                                0,
                                qpt.CardNumber, 
                                case 
                                 when qpt.TransactionDate is null 
                                      then "19000101T000000"
                                 else format_datetime("%Y%m%dT%H%M%S",cast(qpt.TransactionDate as datetime))
                                end,
                                nullstr,
                                qpt.InvoiceNumber,
                                qpt.TransactionType, 
                                0) as tran_uid,
            cast(qpt.pdh_load_time as datetime) as pdh_load_time,
            case 
               when qpt.TransactionDate is null then cast("1900-01-01T00:00:00" as datetime)
               else DATETIME_TRUNC(cast(qpt.transactiondate as datetime),SECOND)
            end as transaction_timestamp,
            case 
               when trim(ifnull(qpt.outletcode,"")) <> "" then upper(trim(qpt.outletcode))
               else upper(left(trim(rk.value),5)) --20221130 use key_value
            end store_id,
            mw.division,
            upper(trim(qpt.TransactionType)) as transactiontype
      from `pdh_rd_quickcilver.qc_partner_detail`  qpt
      Join `pdh_ref_ds.ref_merchant_settlement_window` mw
              on mw.division_type = "PARTNER"
             and mw.division = upper(trim(qpt.Merchant))
             and mw.is_active = "Y"
             and mw.settlement_cycle = syd_hour
      left join pdh_ref_ds.ref_key_value rk 
           on rk.attribute = "merchant-terminalid mapping"
          and upper(trim(rk.key)) = upper(trim(qpt.Merchant)) 
      left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = case 
               when trim(ifnull(qpt.outletcode,"")) <> "" then upper(trim(qpt.outletcode))
               else upper(left(trim(rk.value),5))
            end
       and wbs.is_active = "Y"
       join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
           on tt.settlement_factor <> 0
          and tt.transaction_type = upper(trim(qpt.transactiontype))
          and tt.tran_qualifier = "QP"
 Where upper(trim(qpt.TransactionType)) in ("ACTIVATION","CANCELLATION")
   and (ifnull(qpt.Amount,0) <> 0 or ifnull(qpt.DiscountValue,0) <> 0
   and `pdh_ref_ds.trans_in_stlm_window`(
                   mw.settle_by_store,
                   wbs.store_id,
                   case 
                      when qpt.TransactionDate is null 
                         then cast("1900-01-01T00:00:00" as datetime)
                      else DATETIME_TRUNC(cast(qpt.transactiondate as datetime),SECOND)
                   end, 
                   mw.last_execution_time,       
                   wbs.last_execution_time, 
                   mw.days_lookback,
                   wbs.days_lookback,
                   mw.earliest_date,
                   wbs.earliest_date,
                   mw.day_lag,
                   wbs.day_lag,
                   mw.settlement_cutoff,
                   wbs.settlement_cutoff) = "Y"
   )
    ),
 trtc as (select 
        pdh_ref_ds.get_tran_uid(
                                "TC",
                                nullstr, 
                                nullstr,
                                0,
                                nullstr, 
                                nullstr,
                                dn.tran_uid,
                                nullstr,
                                nullstr, 
                                0) as tran_uid,
        dn.dn_insert_tstamp as pdh_load_time,
        DATETIME_TRUNC(CAST(dn.tstamp_trans AS DATETIME),second)  as transaction_timestamp,
        Upper(left(trim(dn.net_term_id),5)) as store_id,
        mw.division,
        upper(trim(ifnull(ds.description,t.abbr))) as transactiontype
    from pdh_rd_data_navigator_views.vw_lv_gfs_pdh_txn_interface dn   
    Join `pdh_analytics_ds.ref_transaction_types` t on safe_cast(dn.tran_type_id as int64) = 
                                                       cast(t.dn_tran_code as int64)
    join `pdh_ref_ds.ref_response_code` r on dn.act_code = r.action_code
    join `pdh_analytics_ds.ref_tran_type_codes` tt
                 on Upper(trim(tt.tran_type_desc)) = 
                    pdh_ref_ds.get_calc_trans_type(dn.proc_id_iss_b, t.abbr ,dn.mti)
                and tt.settlement_amount_flag <> 0
                and tt.spend_factor <> 0
    join `pdh_ref_ds.ref_store_details` rsd on upper(trim(rsd.store_id)) = 
                  Upper(left(trim(dn.net_term_id),5))
                                           and rsd.is_closed = False 
    join `pdh_ref_ds.ref_merchant_settlement_window` mw
         on mw.is_active = "Y"
        and mw.division_type <> "PARTNER"
        and mw.division =  upper(trim(rsd.division))
    left join `pdh_ref_ds.ref_merchant_settlement_window_by_store` wbs --settle by store
        on wbs.store_id = upper(trim(rsd.store_id))
       and wbs.is_active = "Y"
    left join pdh_ref_ds.ref_transaction_type_codes ds 
                      on trim(ds.code) = trim(dn.tran_type_id)
    WHERE upper(trim(r.approval_flag)) = 'Y'
      and (ifnull(dn.transaction_total,0) <> 0 or ifnull(dn.surcharge_amount,0) <> 0)
      and (mw.division not in ("EG GROUP","LIVE GROUP")
           or ifnull(wbs.store_id,"") <> "")
      and `pdh_ref_ds.trans_in_stlm_window`(mw.settle_by_store,
                                        wbs.store_id,
             DATETIME_TRUNC(SAFE_CAST(dn.tstamp_trans AS DATETIME),second), 
                                        mw.last_execution_time,       
                                        wbs.last_execution_time, 
                                        mw.days_lookback,
                                        wbs.days_lookback,
                                        mw.earliest_date,
                                        wbs.earliest_date,
                                        mw.day_lag,
                                        wbs.day_lag,
                                        mw.settlement_cutoff,
                                        wbs.settlement_cutoff) = "Y"
                  ),
  --
 tran_combined as (           select * from trqc where ifnull(store_id,"") <> ""
                    Union all Select * from trdp where ifnull(store_id,"") <> ""
                    union all Select * from trlk where ifnull(store_id,"") <> ""
                    union all Select * from tred where ifnull(store_id,"") <> ""
                    union all Select * from trcy where ifnull(store_id,"") <> ""
                    union all Select * from trqp where ifnull(store_id,"") <> ""
                    union all Select * from trtc where ifnull(store_id,"") <> ""
                    ),
 trn_seq as (select *, row_number() over(partition by tran_uid 
                                         order by tran_uid, pdh_load_time) tran_uid_seq
             from tran_combined),
 --
 trn_msg as (
        select distinct batch,
        trn.store_id,
        cast(trn.transaction_timestamp as date) Transaction_date,
        Concat(
               Case
                  When trn.tran_uid_seq > 1 then concat("Duplicate Trans ", trn.tran_uid," ")
                  Else ""
               End,
               case
                  When scm.wpay_store_number is null 
                       then "Store is missing in SAP Settlement Mapping"
                  When ifnull(upper(trim(scm.active_flag)),"N") = "N"
                       then "Store not active in Settlement Mapping Table "
                  when ifnull(scm.wpay_company_code,"") = "" 
                       then "company code is missing in SAP Settlement Mapping Table"
                  else ""
               end) as comment,
               sys_datetime create_datetime,
               "Settlement Process" created_by,
               left(trn.tran_uid,2) as data_source,
               trn.division,
               trn.transaction_timestamp,
 From trn_seq trn
 join `pdh_ref_ds.ref_stlm_tlf_config` tlf 
      on upper(trim(tlf.division)) = trn.division
 left join `pdh_ref_ds.ref_str_to_sap_customermapping` scm  on 
      upper(trim(scm.wpay_store_number)) = trn.store_id
 left join `pdh_analytics_ds.stlm_standard_settlement_table` std  on std.tran_uid = trn.tran_uid
      where ifnull(std.tran_uid,"") = ""
        and (Case left(trn.tran_uid,2)
             when "LK" then ifnull(tlf.alipay_flag,"N")
             when "CY" then ifnull(tlf.cybsy_flag,"N") 
             when "QC" then ifnull(tlf.qc_flag,"N")    
             when "ED" then ifnull(tlf.edp_flag,"N")  
             when "DP" then ifnull(tlf.dpay_flag,"N")
             when "TC" then ifnull(tlf.minitaf_flag,"N")
             else "N"
           end) = "Y"
        )

 select * from trn_msg where comment <> "";
 
--add control rec only if record added to log missing
insert into pdh_analytics_ds.file_gen_details
 values( batch,
 cast(sys_datetime as date),
 "missingstore",
 true,
 false,
 sys_datetime,
 sys_datetime,
 sys_datetime,
 null);
--