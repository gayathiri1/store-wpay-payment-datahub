--Log missing Store Information
declare sys_datetime datetime default 
            cast(format_datetime("%Y-%m-%dT%H:%M:%S",current_datetime("Australia/Sydney")) as datetime);
declare sys_date date DEFAULT current_date("Australia/Sydney");
DECLARE inp_lookup STRING DEFAULT "MST Settlement";

DECLARE batch string;
--Get next Batch Number
CALL `pdh_ref_ds.get_nextbatch`(inp_lookup,batch);
if (ifnull(batch,"") in ("","NOContRec","UpdFailed"))  then
   return;
end if; 
--
--Delete Missing Store Details
delete `pdh_analytics_ds.sap_missing_store_log`
Where create_by = "Settlement Process";
--Add  Missing Store Details
insert into `pdh_analytics_ds.sap_missing_store_log`
   (batchnumber,store_id,switch_tran_date,comment,create_datetime,create_by,data_source,division, transaction_datetime )
with trnq as (
     Select concat("QC_",trim(approvalcode),"_",
                                  trim(ReferenceNumber),"_",
                                  cast(BatchNumber as string),"_",
                                  format_datetime("%Y%m%dT%H%M%S",
                                           cast(concat(cast(transactiondate as string),"T",
                                                       cast(transactiontime as string)
                                                      ) as datetime)
                                                 )) as tran_uid,
            date(transactiondate) Trans_date,
            case 
               when ifnull(outletcode,"") <>  "" then upper(trim(outletcode))
               when (upper(trim(descriptive_outlet_name)) = "SAP HYBRIS" and
                    upper(left(trim(issuer),20))  = "WOOLWORTHS GROUP LTD") then "W5975"
               else Null
            end  store_id,
            upper(trim(transactiontype)) as transactiontype,
            "" as tran_qualifier
      from `pdh_rd_quickcilver.qc_detail_transactions` 
      Where ifnull(amount_transacting_merchants_currency_or_points,0) <> 0 
        and ifnull(case 
                      when ifnull(outletcode,"") <>  "" then upper(trim(outletcode))
                      when (upper(trim(descriptive_outlet_name)) = "SAP HYBRIS" and
                           upper(left(trim(issuer),20))  = "WOOLWORTHS GROUP LTD") then "W5975"
                      else Null
                   end,"") <> ""
      )
/*,
trnd as (
      Select concat("DP_",trim(txnRef)) as tran_uid,
             date(txnTime) as Trans_date,
             CASE upper(trim(MerchantName))
                WHEN "WOWONLINE"        then "W8843"
                WHEN "BWSONLINE"        then "W6802"
                WHEN "DANMURPHYSONLINE" then "W8305"
                WHEN "SCANGOSUPER"      then "W6134"
                WHEN "LANGTONS"         then "WC500"
                ELSE upper(left(trim(terminal_id),5))
             end as store_id,
             upper(trim(transactiontype)) as transactiontype,
             case
                when length(txnRef) = length(replace(txnRef,".",""))  then "WEX" 
                else "QC"  
             end as tran_qualifier
      from `pdh_rd_data_navigator.digitalpay_gc_txns`
      where upper(trim(transactiontype)) in ("PURCHASE","REFUND") 
      and upper(trim(MerchantName)) = "EVERYDAY PAY"
      and ifnull(responseCodeContainer,"") = "00"
      and (length(txnRef) - length(replace(txnRef,".",""))) in (0,2)
      and ifnull(amount,0) <> 0
      and ifnull(CASE upper(trim(MerchantName))
                      WHEN "WOWONLINE"        then "W8843"
                      WHEN "BWSONLINE"        then "W6802"
                      WHEN "DANMURPHYSONLINE" then "W8305"
                      WHEN "SCANGOSUPER"      then "W6134"
                      WHEN "LANGTONS"         then "WC500"
                      ELSE upper(left(trim(terminal_id),5))
                   end ,"") <> ""   
       ),
    trnl as (
      Select concat("LK_",
                  trim(ifNull(cast(ResRef as string),"NULL")),"_",
                  cast(ReqDate as string),"T",
                  (case 
                      when ReqTime is null then "00:00:00"
                      else cast(ReqTime as string)
                   end)) as tran_uid,
             cast(Concat(cast(ReqDate as string),"T",
                       ifNull(cast(ReqTime as string),"00:00:00"))
                 as datetime)  as Trans_date,
             upper(trim(ReqStore)) as store_id,
             upper(trim(ReqType)) as transactiontype,
             "" as tran_qualifier
      from `pdh_rd_apm.alipay_linkly`
      where ifnull(ReqStore,"NULL") <> "NULL"
      and ReqAmt <> 0
      and ResRT =    "TRANSACTION APPROVED"
      and ReqMT in (200,400) 
      and upper(trim(ReqType)) in ("N","N_","P","R")
      and ReqDate is not NULL
      and OrigData = "Alipay")
   */
    select distinct 
           batch,
           trn.store_id,
           cast(trn.Trans_date as date),
           Concat(
              Case 
                 When rsd.store_id is Null then "Store not in Store Details"
                 When rsd.is_closed = true then "Store is Closed"
                 Else ""
              End," ",
              Case
                 When msw.division is null then concat("division ",upper(trim(ifNull(rsd.division,"")))," is missing in Settlement Window")
                 When ifnull(msw.is_active,"N") = "N" then "Division is not active in settlement window" 
                 else ""
              end," ",
              case 
                 When tt.transaction_type is null then concat("tranType ",trn.transactiontype, " is missing in Settlement Factor Table")
                 when tt.settlement_factor not in (0,-1,1) then "Invalid Settlement factor"
                 else ""
              end," ",
              case
                  When scm.wpay_store_number is null then "Store is missing in SAP Settlement Mapping Table"
                  When ifnull(upper(trim(scm.active_flag)),"") = "N" then "Store is not active in SAP Settlement Mapping Table" 
                  else ""
              end) as comment,
           sys_datetime create_datetime,
           "Settlement Process" created_by,
           left(trn.tran_uid,2) as data_source,
           upper(trim(rsd.division)),
           trn.Trans_date
    From (select * from trnq
      --    union all Select * from trnd
      --    union all Select * from trnl
         ) trn
    left join `pdh_ref_ds.ref_store_details` rsd 
         on upper(trim(rsd.store_id)) = trn.store_id
    left join `pdh_ref_ds.ref_merchant_settlement_window` msw
         on msw.division = upper(trim(rsd.division))
    left join `pdh_ref_ds.ref_str_to_sap_customermapping` scm
         on upper(trim(scm.wpay_store_number)) = upper(trim(rsd.store_id)) 
    left join `pdh_analytics_ds.stlm_standard_settlement_table` std
         on std.tran_uid = trn.tran_uid
    left join `pdh_ref_ds.ref_transaction_type_settlement_factor` tt
         on tt.transaction_type = transactiontype
         and tt.tran_qualifier  = case
                                     when left(trn.tran_uid,2) = "QC" then msw.division_type
                                     else trn.tran_qualifier
                                  end 
    where (CASE 
             when ifnull(std.tran_uid,"") <> "" then 0
             WHEN rsd.store_id is Null then 1
             when rsd.is_closed = true then 1
             when msw.division is null then 1
             when scm.wpay_store_number is null then 1 
             when upper(trim(ifNull(scm.active_flag,""))) = "N" then 1
             when tt.transaction_type is null then 1
             when tt.settlement_factor not in (0,-1,1) then 1
             else 0
          end)  = 1
     and (CASE 
             when msw.division is null then 1
             when trn.Trans_date <= ifnull(msw.last_execution_time, cast("1900-01-01" as datetime)) then 0
             when trn.Trans_date > cast(concat(format_date("%Y-%m-%d",date_add(sys_date, INTERVAL msw.day_lag DAY)), "T",
                                        right(concat("0",cast(floor(msw.settlement_cutoff/100) as string)),2), ":",
                                        right(cast(msw.settlement_cutoff as string),2),":00") as datetime) then 0
             else 1
          end )   = 1;

if (Select count(*)
    From `pdh_analytics_ds.sap_missing_store_log`
    where create_by = "Settlement Process") > 0 then 
    return;
end if;

--add control rec to specify missing store is logged
insert into pdh_analytics_ds.file_gen_details 
         values( batch,
                 cast(sys_datetime as date), 
                 "missingstore",
                 true, 
                 false, 
                 null,
                 Null, 
                 sys_datetime,
                 null);